--- 
type: post
status: publish
tags: 
- suggestion

title: suggestion简单实现
category: works

layout: post
meta: 
  _edit_last: "1"
published: true
---
今年暑假实习了，我做的了有一个模块是suggestion，也就是搜索关键词提示。 嗯。。这里了说一下我在做suggestion时的一些实现方法。

suggestion的基本思想就是，根据你输入的一个前缀词，然后提示相关的词条。首先了，我们必须有一个suggestion词库，这个词库可以人工预制和使用各种方法来统计，来生成suggestion词库。以后所有的suggstion，都是根据这个词库来生成的。由此可知，suggestion的效果和这个词库是有莫大关系的。如果提示词想要出现在suggestion列表里，必须放在suggestion词库了。可能有的童鞋，有疑问了，为什么要我们自己建立这样一个词库，而不是使用通用的词库了。suggestion是为搜索服务的，所以suggestion必须是有利于搜索的词，再就是通过suggestion对用户的搜索行为导向。<!--split-->

suggestion词库由，汉词、英文词、数字或者混编等组成。前缀匹配找出相应suggestion。为了快速的匹配，这里多所有的suggestion term建立tire树索引。对tire树不清楚的童鞋可以去google下。为了快速查找，对于trie树的根节点用hash实现。trie树建立的索引就是前缀词到对应的term。查找suggestion的基本算法就是这样了。

但是需求是复杂的，我们的pm就提出了，几种用户输入的情况。一、用户的输入直接前缀匹配;二、用户输入的是拼音，还要能够检索到对应的汉字suggetion;三、用户输入的是英文缩写，能够检索到对应的汉字suggestion。第一种情况是最容易实现的，只需要将suggestion词库里的词直接生成trie树里面的对应关系，即suggestion->suggestion。对于第二种情况，就需要生成所有suggestion的拼音对应suggestion。第三种情况，需要一张缩写和汉词的对应表，建trie树时，把缩写和汉词对应建立即可。

在第二种需求中我们还有一个东西需要去实现，就是汉字转换成拼音，这个转化还需要处理多音字的问题。这里了简单说下这个翻译的基本原理。它是基于字和词的翻译。如果一个汉字不是多音字，很简单只需要简单的将这个字hash到对应的拼音字符串即可。如果是多音字，也不难。分析多音字可知，一个多音字必须在一个词中才能确定正确的读音，所以就必须将这个词存起来，一起翻译成对应的拼音。含有多音字的词，有些需要人工添加，这个比较麻烦，因为有些词在辞典里面根本没有，比如“阿迪达斯”。不过好在，这个只需要翻译suggestion词表里的汉字，这个减少了很多词的必要。最后统一的把字和词看成，不同长度的词，同样建立hash+tire树。

不过了，我这里说的很多东西都很粗糙，里面还有很多细节问题需要去解决。比如如何建hash，如何建trie树等。实现代码和细节我就不便多写了。
